% Write Data File

function WriteData(filename,data)
fprintf('Writing data file: %s\n',filename)
    f_out=fopen(filename,'wt');          % Creat output file
fprintf('\t >>> Numbers and types...\n')
    fprintf(f_out,'%s # %s\n','LAMMPS data file generated by pdb2data of zhouyu.',date);
    fprintf(f_out,' %d %s\n',data.atom.num,'atoms');
    fprintf(f_out,' %d %s\n',data.bond.num,'bonds');
    fprintf(f_out,' %d %s\n',data.angle.num,'angles');
    fprintf(f_out,' %d %s\n',data.dihedral.num,'dihedrals');
    fprintf(f_out,' %d %s\n',data.improper.num,'impropers');
    fprintf(f_out,' \n');
    fprintf(f_out,' %d %s\n',data.atom.type,'atom types');
    fprintf(f_out,' %d %s\n',data.bond.type,'bond types');
    fprintf(f_out,' %d %s\n',data.angle.type,'angle types');
    fprintf(f_out,' %d %s\n',data.dihedral.type,'dihedral types');
    fprintf(f_out,' %d %s\n',data.improper.type,'improper types');
    fprintf(f_out,' \n');
fprintf('\t >>> Boundary...\n')
    fprintf(f_out,' %.6f %.6f %s\n',data.boundary(1,:),'xlo xhi');
    fprintf(f_out,' %.6f %.6f %s\n',data.boundary(2,:),'ylo yhi');
    fprintf(f_out,' %.6f %.6f %s\n',data.boundary(3,:),'zlo zhi');
fprintf('\t >>> Coefficients...\n')
    if ~isempty(data.Masses)
    fprintf(f_out,'\n %s\n\n','Masses');
    for i=1:data.atom.type
        fprintf(f_out,' %.0f %.5f',i,cell2mat(data.Masses{i}(2)));
        fprintf(f_out,' #%s\n',char(data.Masses{i}(1)));
    end
    end
    if ~isempty(data.Pair_Coeffs)
        fprintf(f_out,'\n %s\n\n','Pair Coeffs');
        for i=1:data.atom.type                                 % KJ/mol -> Kcal/mol
            fprintf(f_out,' %.0f %.5f %.5f',i,cell2mat(data.Pair_Coeffs{i}(2))/4.18,cell2mat(data.Pair_Coeffs{i}(3)));
            fprintf(f_out,' #%s\n',char(data.Pair_Coeffs{i}(1)));
        end
    end
    if ~isempty(data.Bond_Coeffs)
        fprintf(f_out,'\n %s\n\n','Bond Coeffs');
        for i=1:data.bond.type
            fprintf(f_out,' %.0f %.0f %.4f',i,cell2mat(data.Bond_Coeffs{i}(2)),cell2mat(data.Bond_Coeffs{i}(3)));
            fprintf(f_out,' #%s\n',char(data.Bond_Coeffs{i}(1)));
        end
    end
    if ~isempty(data.Bond_Coeffs)
        fprintf(f_out,'\n %s\n\n','Angle Coeffs');
        for i=1:data.angle.type
            fprintf(f_out,' %.0f %.0f %.2f',i,cell2mat(data.Angle_Coeffs{i}(2)),cell2mat(data.Angle_Coeffs{i}(3)));
            fprintf(f_out,' #%s\n',char(data.Angle_Coeffs{i}(1)));
        end
    end
    if ~isempty(data.Dihedral_Coeffs)
        fprintf(f_out,'\n %s\n\n','Dihedral Coeffs');
        for i=1:data.dihedral.type
            fprintf(f_out,' %.0f %.0f %.3f %.3f %.3f %.3f',i,cell2mat(data.Dihedral_Coeffs{i}(2)),cell2mat(data.Dihedral_Coeffs{i}(3)),cell2mat(data.Dihedral_Coeffs{i}(4)),cell2mat(data.Dihedral_Coeffs{i}(5)),cell2mat(data.Dihedral_Coeffs{i}(6)));
            fprintf(f_out,' #%s\n',char(data.Dihedral_Coeffs{i}(1)));
        end
    end
    if ~isempty(data.Improper_Coeffs)
        fprintf(f_out,'\n %s\n\n','Improper Coeffs');
        for i=1:data.improper.type
            fprintf(f_out,' %.0f %.3f %.3f %.3f %.3f %.3f',i,cell2mat(data.Improper_Coeffs{i}(2)),cell2mat(data.Improper_Coeffs{i}(3)),cell2mat(data.Improper_Coeffs{i}(4)),cell2mat(data.Improper_Coeffs{i}(5)),cell2mat(data.Improper_Coeffs{i}(6)));
            fprintf(f_out,' #%s\n',char(data.Improper_Coeffs{i}(1)));
        end
    end
fprintf('\t >>> Atoms, Bonds, Angles, Dihedrals, Impropers...\n')
    for i=1:data.atom.num
        if i == 1
            fprintf(f_out,'\n%s\n\n','Atoms');
        end
        fprintf(f_out,'%.0f %.0f %.0f %.6f %.6f %.6f %.6f\n',data.Atoms(i,:));
    end
    for i=1:data.bond.num
        if i == 1
            fprintf(f_out,'\n%s\n\n','Bonds');
        end
        fprintf(f_out,'%.0f %.0f %.0f %.0f\n',data.Bonds(i,:));
    end
    for i=1:data.angle.num
        if i == 1
            fprintf(f_out,'\n%s\n\n','Angles');
        end
        fprintf(f_out,'%.0f %.0f %.0f %.0f %.0f\n',data.Angles(i,:));
    end
    for i=1:data.dihedral.num
        if i == 1
            fprintf(f_out,'\n%s\n\n','Dihedrals');
        end
        fprintf(f_out,'%.0f %.0f %.0f %.0f %.0f %.0f\n',data.Dihedrals(i,:));
    end
    for i=1:data.improper.num
        if i == 1
            fprintf(f_out,'\n%s\n\n','Impropers');
        end
        fprintf(f_out,'%.0f %.0f %.0f %.0f %.0f  %.0f  %.0f\n',data.Impropers(i,:));
    end
    fclose(f_out);      % Close output file
fprintf('\t data file written successfully!\n')
end